더미 게시글 , 로딩상태, 현재 페이지, 페이지 당 글 수를 받아옴

setCurrentPage - 현재 가르키는 페이지 상태를 업데이트

currentPosts - 총 게시글 수를 인자로 받아서 
	      현재 페이지, 페이지 당 글 수를 가져와서
	      처음 게시글, 마지막 게시글을 추출해서 리턴

Post 컴포넌트에 추출한 게시글 리스트 전달,
       loading상태 전달.
       --게시글 목록을 그려주는 컴포넌트

Pagination 에 페이지 당 글 수 전달
	  currentPost의 인자인 총 게시글 수를 전달
	  setCurrentPage를 전달
	  --페이지당 글 수, 총 포스트 갯수를 그려주고
	  --page번호목록을 그려주는 컴포넌트

---------------------------------------------------------
multer 사용법
const express = require('express')
const app = express()
const PORT = process.env.PORT || 6500

const db = require('./config/db.js')

const bodyParser = require('body-parser')
app.use(bodyParser.json())

const multer = require('multer')
const storage = multer.diskStorage({
  destination: function(req,file,cb){
    cb(null,'upload/')
  },
  filename: function(req,file,cb){
    cb(null,Date.now()+file.originalname)
  }
})
// const upload = multer({dest:'upload/'})
const upload = multer({
  storage:multer.diskStorage({
    destination(req,file,cb){
      cb(null,'upload/')
    },
    filename(req,file,cb){
      cb(null, Date.now()+file.originalname)
    }
  })
})

app.get('/',(res,req)=>{
  console.log('root')
})

app.post('/upload', upload.single('file'),(req,res) => {
  console.log(req.file)
  console.log(req.body)
})

app.listen(PORT,()=>{
  console.log(`Connecting succeeded : localhost:${PORT}`)
})